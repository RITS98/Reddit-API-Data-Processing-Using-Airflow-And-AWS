services:
    db:
        container_name: postgres_container
        image: postgres:14
        ports:
            - "5402:5432"
        environment:
            POSTGRES_USER: airflow
            POSTGRES_PASSWORD: airflow
            POSTGRES_DB: airflow_db
        env_file:
            - .env
        restart: unless-stopped
        volumes:
            - ./postgres/data:/var/lib/postgresql/data
            - ./postgres/airflow_init.sql:/docker-entrypoint-initdb.d/airflow_init.sql
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U airflow -d airflow_db"]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - my_network
    
    airflow:
        container_name: airflow_container
        image: apache/airflow:3.0.0
        ports:
            - "8002:8080"
        environment:
            AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@db:5432/airflow_db
            PYTHONPATH: /opt/airflow
            _AIRFLOW_WWW_USER_USERNAME: admin
            _AIRFLOW_WWW_USER_PASSWORD: admin123
            _AIRFLOW_WWW_USER_EMAIL: admin@example.com
            _AIRFLOW_WWW_USER_FIRSTNAME: Admin
            _AIRFLOW_WWW_USER_LASTNAME: User
        env_file:
            - .env
        restart: unless-stopped
        volumes:
            - ${AIRFLOW_PROJ_DIR:-.}/dags:/opt/airflow/dags
            - ${AIRFLOW_PROJ_DIR:-.}/logs:/opt/airflow/logs
            - ${AIRFLOW_PROJ_DIR:-.}/plugins:/opt/airflow/plugins
            - ${AIRFLOW_PROJ_DIR:-.}/data:/opt/airflow/data
            - ${AIRFLOW_PROJ_DIR:-.}/config:/opt/airflow/config
            - ${AIRFLOW_PROJ_DIR:-.}/requirements.txt:/opt/airflow/requirements.txt
            - ${AIRFLOW_PROJ_DIR:-.}/.env:/opt/airflow/.env
            - ${AIRFLOW_PROJ_DIR:-.}/pipelines:/opt/airflow/pipelines
            - /var/run/docker.sock:/var/run/docker.sock
            - ${AIRFLOW_PROJ_DIR:-.}/etls:/opt/airflow/etls
            - ${AIRFLOW_PROJ_DIR:-.}/tests:/opt/airflow/tests
            - ${AIRFLOW_PROJ_DIR:-.}/utils:/opt/airflow/utils
        depends_on:
            db:
                condition: service_healthy
        networks:
            - my_network
        command: >
            bash -c "
            pip install -r /opt/airflow/requirements.txt &&
            airflow db migrate &&
            airflow standalone
            "


networks:
    my_network:
        driver: bridge